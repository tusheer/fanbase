//test
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("MONGODBURL")
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String?  @db.Text
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Celebrity {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  firstName String?
  lastName  String?
  products  String
  password  String?  @db.Text
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Product {
  id          String         @id @default(cuid())
  images      ProductImage[]
  description String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model ProductImage {
  id          String   @id @default(cuid())
  url         String
  name        String
  description String?
  alt         String?
  colors      String[]
  types       String[]
  sizes       String[]
  Product     Product? @relation(fields: [productId], references: [id])
  productId   String?
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model BuildOrder {
  id          String  @id @default(cuid())
  matchUp     String
  build       String
  style       String  @default("cheese")
  author      String?
  title       String  @default("Unknown")
  description String?
}
