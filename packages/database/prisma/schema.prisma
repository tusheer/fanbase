//test
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESQLURL")
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  firstName String
  lastName  String
  password  String?  @db.Text
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model User {
  id             String       @id @default(cuid())
  email          String       @unique
  username       String       @unique
  firstName      String?
  lastName       String?
  phone          String?
  password       String       @db.Text
  createdAt      DateTime     @default(now())
  updateAt       DateTime     @updatedAt
  country        String?
  shop           Shop[]
  Product        Product[]
  ProfilePicture Json?
  coverImage     Json?
  userType       UserType     @default(PUBLIC_FIGURE)
  socialMedia    Json?
  topFan         PublicUser[]
  session        Session[]
}

model PublicUser {
  id             String    @id @default(cuid())
  email          String    @unique
  username       String?   @unique
  firstName      String?
  lastName       String?
  phone          Int?
  password       String    @db.Text
  createdAt      DateTime  @default(now())
  updateAt       DateTime  @updatedAt
  country        String?
  fan            User[]
  session        Session[]
  socialMedia    Json?
  ProfilePicture Json?
  coverImage     Json?
}

model Product {
  id          String         @id @default(cuid())
  images      ProductImage[]
  description String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  User        User?          @relation(fields: [UserId], references: [id])
  UserId      String?
  Shop        Shop?          @relation(fields: [shopId], references: [id])
  shopId      String?
  type        String
}

model Shop {
  id       String    @id @default(cuid())
  name     String
  products Product[]
  User     User?     @relation(fields: [UserId], references: [id])
  UserId   String?
  type     String
}

model ProductImage {
  id          String   @id @default(cuid())
  url         String
  name        String
  description String?
  alt         String?
  colors      String[]
  types       String[]
  sizes       String[]
  Product     Product? @relation(fields: [productId], references: [id])
  productId   String?
}

model Session {
  id           String      @id @default(cuid())
  userAgent    Json
  refreshToken String      @unique
  User         User?       @relation(fields: [UserId], references: [id])
  UserId       String?
  PublicUser   PublicUser? @relation(fields: [id], references: [id])

  @@unique([id])
}

enum UserType {
  PUBLIC_FIGURE
  BRAND
}
